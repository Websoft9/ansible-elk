
- name: Delete elk dir for sec_installation
  shell: rm -rf /data/wwwroot/elk

- name: Clone ELK in Websoft9
  git:
    repo: "{{elk_git_url}}"
    dest: "/data/wwwroot/elk"

- name: Create a Apache Log symbolic link
  file:
    src: '{{item.src}}'
    dest: '{{item.dest}}'
    state: link
    recurse: yes
  with_items:
    - {src: /var/lib/docker/volumes/elk_elasticsearch/_data,dest: /data/wwwroot/elk/volumes/elasticsearch}
    - {src: /var/lib/docker/volumes/elk_kibana/_data,dest: /data/wwwroot/elk/volumes/kibana}
    - {src: /var/lib/docker/volumes/elk_logstash/_data,dest: /data/wwwroot/elk/volumes/logstash}

- name: Rename and Run docker-compose
  shell: |
    docker-compose up -d
    sleep 30
  args:
    chdir: /data/wwwroot/elk

- name: Set vm.max_map_count=262144 for hosted machine, otherwise ES start error
  become: yes
  sysctl:
    name: vm.max_map_count
    value: 262144
    state: present
    reload: yes

- name: Check elasticsearch,kibana,logstash version
  shell: |
    sudo echo -e "elk_version: `docker exec -it elk-elasticsearch bin/elasticsearch --version | awk -F ' ' '{print $2}'`" |sudo tee -a /data/logs/install_version.txt

- name: Check elk Service
  shell: sudo docker ps
  register: check_elastic_service
  notify: check_elastic_service

- block:
  - pause:
      prompt: "Please login to Kibana UI and check it, then input Enter to continue"
      echo: no
  - name: Delete contains and images resources
    shell: |
      docker-compose down -v
      docker system prune --all --force
    args:
      chdir: /data/wwwroot/elk
  when: elk_delete_image == 'y'
